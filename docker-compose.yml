version: "3.8"
services:
  jenkins:
    #    root - 7eec95ce8e75452696f7888952fc7511
    image: jenkins/jenkins:lts
    restart: always
    privileged: true
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true"
    ports:
      - 9097:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - .jenkins_configuration/:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
  # sonarqube:
  #  image: sonarqube:lts-community
  #  restart: unless-stopped
  #  environment:
  #    SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
  #    SONAR_TELEMETRY_ENABLE: 'false'
  #  volumes:
  #    - .sonarqube/sonarqube_data:/opt/sonarqube/data
  #    - .sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
  #    - .sonarqube/sonarqube_logs:/opt/sonarqube/logs
  #    - .sonarqube/sonarqube_temp:/opt/sonarqube/temp
  #  ports:
  #    - '9096:9096'
  # keycloak:
  #  container_name: keycloak
  #  image: jboss/keycloak
  #  ports:
  #    - '8080:8080'
  #  environment:
  #    DB_VENDOR: MYSQL
  #    DB_ADDR: mysql_db
  #    DB_PORT: 3306
  #    DB_DATABASE: core_bank
  #    DB_USER: hieudx1
  #    DB_PASSWORD: 123456789
  #    DB_JDBC_PARAMS: useSSL=false&allowPublicKeyRetrieval=true
  #    KEYCLOAK_USER: admin
  #    KEYCLOAK_PASSWORD: 123456789
  #    KC_HEALTH_ENABLED: 'true'
  #    KC_METRICS_ENABLED: 'true'
  #    KC_LOG_LEVEL: info
  #    KC_HTTP_PORT: 8080
  #    KC_HOSTNAME: keycloak
  #    KC_HOSTNAME-ADMIN-URL: http://localhost:8080/auth/realms/hieudx-internet-banking
  #  restart: always
  #  depends_on:
  #    mysql_db:
  #      condition: service_healthy
  #  networks:
  #    - microservice_internal
  #  healthcheck:
  #    test: ["CMD", "curl", "--head","fsS", "http://localhost:8080/health/ready"]
  #    interval: 15s
  #    timeout: 2s
  #    retries: 15
  # mysql_db:
  #   container_name: mysql_db
  #   restart: always
  #   image: mysql:8.0
  #   volumes:
  #     - db:/var/lib/mysql
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   environment:
  #     - "MYSQL_DATABASE=core_bank"
  #     - "MYSQL_USER=hieudx1"
  #     - "MYSQL_PASSWORD=123456789"
  #     - "MYSQL_ROOT_PASSWORD=123456789"
  #   ports:
  #     - "3309:3306"
  #   networks:
  #    - microservice_internal
  #   healthcheck:
  #     test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
  #     timeout: 20s
  #     retries: 10
#  registry:
#    container_name: registry
#    build:
#      context: registry
#      dockerfile: Dockerfile
#    image: registry:latest
#    ports:
#      - '8761:8761'
#    networks:
#      - microservice_internal
#  gateway:
#    container_name: gateway2
#    build:
#      context: gateway2
#      dockerfile: Dockerfile
#    image: gateway2:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#      - eureka.instance.hostname=registry
#      - app.config.keycloak.url=http://keycloak:8080/auth
#    depends_on:
#      keycloak:
#        condition: service_healthy
#    ports:
#      - '9090:9090'
#    networks:
#      - microservice_internal
#  user_service:
#    container_name: user_service
#    build:
#      context: usersevice
#      dockerfile: Dockerfile
#    image: user_service:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#      - spring.datasource.url=jdbc:mysql://mysql_db:3306/core_bank
#    depends_on:
#      mysql_db:
#        condition: service_healthy
#      keycloak:
#        condition: service_healthy
#    ports:
#      - '8082:8082'
#    networks:
#      - microservice_internal
#  payment:
#    container_name: payment
#    build:
#      context: payment
#      dockerfile: Dockerfile
#    image: payment:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#      - spring.datasource.url=jdbc:mysql://mysql_db:3306/core_bank
#    depends_on:
#      mysql_db:
#        condition: service_healthy
#    ports:
#      - 8083:8083
#    networks:
#      - microservice_internal
#  fund_transfer:
#    container_name: fund_transfer
#    build:
#      context: fund_transfer
#      dockerfile: Dockerfile
#    image: fund_transfer:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#      - spring.datasource.url=jdbc:mysql://mysql_db:3306/core_bank
#    depends_on:
#      mysql_db:
#        condition: service_healthy
#    ports:
#      - 8084:8084
#    networks:
#      - microservice_internal
#  core_bank:
#    container_name: core_bank
#    build:
#      context: core_bank
#      dockerfile: Dockerfile
#    image: core_bank:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#      - spring.datasource.url=jdbc:mysql://mysql_db:3306/core_bank
#    depends_on:
#      mysql_db:
#        condition: service_healthy
#    ports:
#      - 8085:8081
#    networks:
#      - microservice_internal
#  centralize_config:
#    container_name: centralize_config
#    build:
#      context: centralize_config
#      dockerfile: Dockerfile
#    image: centralize_config:latest
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://registry:8761/eureka/
#    depends_on:
#      - registry
#      - mysql_db
#      - keycloak
#    ports:
#      - 8086:8081
#    networks:
#      - microservice_internal

networks:
  microservice_internal:
    driver: bridge

volumes:
  db:
    driver: local
